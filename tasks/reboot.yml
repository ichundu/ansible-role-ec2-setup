---
# Run this playbook if we call for a reboot

- name: Reassure we called for a reboot
  assert:
    that: reboot

- name: Reboot host if we call for a reboot (via /sbin/shutdown)
  shell: sleep 5; /sbin/shutdown -r now; echo &
  when: ansible_service_mgr != "systemd"

- name: Reboot host if we call for a reboot (via systemd)
  command: systemd-run --on-active=10 systemctl reboot
  async: 0
  poll: 0
  when: ansible_service_mgr == "systemd"

- name: Wait for rebooted host/s to come up
  local_action:
    module: wait_for
    host: "{{ osbootstrap_host | default(inventory_hostname) }}"
    port: 22
    search_regex: "OpenSSH"
    timeout: 500
    delay: 60
  become: no

- name: Refresh inventory
  meta: refresh_inventory

- name: Re-gather facts for rebooted host/s
  setup:
  register: setup_task_result
  retries: 50
  delay: 5
  until: setup_task_result | success
  ignore_errors: true

- name: Display OS information after reboot.
  debug:
    msg:
      - "Rebooted: {{ reboot }}"
      - "OS: {{ ansible_distribution }}"
      - "Release: {{ ansible_distribution_version }}"
      - "Architecture: {{ ansible_architecture }}"
      - "Platform: {{ ansible_product_name }}"
